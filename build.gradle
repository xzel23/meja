// Copyright 2019 Axel Howind
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id 'com.adarshr.test-logger' version '2.1.0' apply false
    id 'com.github.spotbugs' version '4.7.2' apply false
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'idea'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'com.adarshr.test-logger'

    /////////////////////////////////////////////////////////////////////////////
    group = 'com.dua3.meja'
    version = '3-BETA12-SNAPSHOT'

    ext.scm = 'https://gitlab.com/com.dua3/lib/meja.git'
    ext.repo = 'public'

    ext.developerId = 'axh'
    ext.developerName = 'Axel Howind'
    ext.developerEmail = 'axh@dua3.com'
    ext.organization = 'dua3'
    ext.organizationUrl = 'https://www.dua3.com'
    ////////////////////////////////////////////////////////////////////////////

    ext {
        isReleaseVersion = !version.endsWith("SNAPSHOT")
        
        java_version='17'
        javafx_version='17.0.0.1'
        junit_version='5.7.1'

        dua3_utility_version = '10-BETA12-SNAPSHOT'
    }

    sourceCompatibility = java_version
    targetCompatibility = java_version

    repositories {
        // Maven Central Repository
        mavenCentral()

        // Sonatype Snapshots
        maven {
            name "oss.sonatype.org-snapshot"
            url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            mavenContent {
                snapshotsOnly()
            }
        }

        // Maven local Repository
        mavenLocal()
    }

    // dependencies
    dependencies {
        // com.dua3 libraries
        implementation "com.dua3.utility:utility:${dua3_utility_version}"

        // JUnit
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/java/main/")
            testOutputDir = file("$buildDir/classes/java/test/")
        }
    }

    test {
        useJUnitPlatform()
    }

    testlogger {
        theme 'standard-parallel'
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    javadoc {
        options.encoding = 'UTF-8'
        options.addBooleanOption('html5', true)
    }

    // === MAVEN publication === >

    // Create the pom configuration:
    def pomConfig = {
        licenses {
            license {
                name "The Apache Software License, Version 2.0"
                url "https://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id project.developerId
                name project.developerName
                email project.developerEmail
                organization project.organization
                organizationUrl project.organizationUrl
            }
        }

        scm {
            url project.scm
        }
    }

    // Create the publication with the pom configuration:
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId project.group
                artifactId project.name
                version version
                from components.java
                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', project.description)
                    root.appendNode('name', project.name)
                    root.appendNode('url', project.scm)
                    root.children().last() + pomConfig
                }
            }
        }

        repositories {
            // Sonatype OSSRH
            maven {
                def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = isReleaseVersion ? releaseRepo : snapshotRepo
                credentials {
                    username = System.properties.get('ossrhUsername')
                    password = System.properties.get('ossrhPassword')
                }
            }
        }
    }

    // === sign artifacts
    signing {
        sign publishing.publications.mavenJava
    }

    // === SPOTBUGS === >
    spotbugs.toolVersion = '4.2.3'

    spotbugs.excludeFilter = rootProject.file('spotbugs-exclude.xml')

    tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

}

// === DEFAULT TASKS === >
tasks.withType(PublishToMavenRepository) {
    dependsOn publishToMavenLocal
}

defaultTasks 'build', 'publishToMavenLocal'
